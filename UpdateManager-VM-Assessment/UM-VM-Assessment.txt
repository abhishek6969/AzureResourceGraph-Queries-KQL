//It will join with resources table and patchassessmentresources
((resources //join of virtual machines, you can play with params as you see fit.
| where type =~ "microsoft.compute/virtualmachines"
//| mvexpand tags
//| extend tagKey = tostring(bag_keys(tags)[0])
//| extend tagValue = tostring(tags[tagKey])
// | where tagKey contains "April_stopped"
// | where tagValue contains "Linux_stopped"
| where properties.storageProfile.osDisk.osType in~ ('Linux','Windows')
| extend conf = iff(properties.storageProfile.osDisk.osType =~ "windows", properties.osProfile.windowsConfiguration.patchSettings.patchMode, properties.osProfile.linuxConfiguration.patchSettings.patchMode)
| extend os = tolower(tostring(properties.storageProfile.osDisk.osType))
| extend id=tolower(id)
| extend status=properties.extended.instanceView.powerState.displayStatus
| extend imageRef = strcat(tolower(tostring(properties.storageProfile.imageReference.publisher)), ":", tolower(tostring(properties.storageProfile.imageReference.offer)), ":", tolower(tostring(properties.storageProfile.imageReference.sku)))
// For marketplace images, check in the list of allow listed images for guest patching
| extend isMarketplaceUnsupportedImageUsed = (isnotnull(properties.storageProfile.imageReference.publisher) and isnotnull(properties.storageProfile.imageReference.offer) and isnotnull(properties.storageProfile.imageReference.sku)) and
    not(iff(os =~ "windows",
        (imageRef in ('microsoftwindowsserver:microsoftserveroperatingsystems-previews:windows-server-vnext-azure-edition-core','microsoftwindowsserver:windowsserver:2008-r2-sp1','microsoftwindowsserver:windowsserver:2012-r2-datacenter','microsoftwindowsserver:windowsserver:2012-r2-datacenter-gensecond','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2012-r2-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2016-datacenter','microsoftwindowsserver:windowsserver:2016-datacenter-gensecond','microsoftwindowsserver:windowsserver:2016-datacenter-server-core','microsoftwindowsserver:windowsserver:2016-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2016-datacenter-with-containers','microsoftwindowsserver:windowsserver:2019-datacenter','microsoftwindowsserver:windowsserver:2019-datacenter-core','microsoftwindowsserver:windowsserver:2019-datacenter-gensecond','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2019-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserver:2019-datacenter-with-containers','microsoftwindowsserver:windowsserver:2022-datacenter','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-core-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-hotpatch-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-azure-edition-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-core','microsoftwindowsserver:windowsserver:2022-datacenter-core-g2','microsoftwindowsserver:windowsserver:2022-datacenter-g2','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk','microsoftwindowsserver:windowsserver:2022-datacenter-smalldisk-g2','microsoftwindowsserver:windowsserverhotpatch-previews:windows-server-2022-azure-edition-hotpatch','microsoftazuresiterecovery:process-server:windows-2012-r2-datacenter','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v4','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v5','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v6','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-v7','microsoftdynamicsax:dynamics:pre-req-ax7-onebox-u8','microsoftsqlserver:sql2016sp1-ws2016:standard','microsoftsqlserver:sql2016sp2-ws2016:standard','microsoftsqlserver:sql2017-ws2016:enterprise','microsoftsqlserver:sql2017-ws2016:standard','microsoftsqlserver:sql2019-ws2019:enterprise','microsoftsqlserver:sql2019-ws2019:sqldev','microsoftsqlserver:sql2019-ws2019:standard','microsoftsqlserver:sql2019-ws2019:standard-gen2') or imageRef matches regex 'microsoftwindowsserver:windowsserver:.+|microsoftbiztalkserver:biztalk-server:.+|microsoftdynamicsax:dynamics:.+|microsoftpowerbi:.+:*|microsoftsharepoint:microsoftsharepointserver:.+|microsoftsqlserver:.+:*|microsoftvisualstudio:visualstudio.+:*-ws2012r2|microsoftvisualstudio:visualstudio.+:*-ws2016|microsoftvisualstudio:visualstudio.+:*-ws2019|microsoftvisualstudio:visualstudio.+:*-ws2022|microsoftwindowsserver:windows-cvm:.+|microsoftwindowsserver:windowsserverdotnet:.+|microsoftwindowsserver:windowsserver-gen2preview:.+|microsoftwindowsserver:windowsserversemiannual:.+|microsoftwindowsserver:windowsserverupgrade:.+|microsoftwindowsserverhpcpack:windowsserverhpcpack:.+'),
        not(imageRef in ('redhat:rhel:74-gen2','redhat:rhel-ha:7.4','redhat:rhel-ha:7.5','redhat:rhel-ha:7.6','redhat:rhel-ha:8.1','redhat:rhel-sap:7.4','redhat:rhel-sap:7.5','redhat:rhel-sap:7.7','redhat:rhel-sap-ha:7.5','redhat:rhel-ha:81_gen2') or imageRef matches regex 'openlogic:centos:8.+|openlogic:centos-hpc:.+|microsoftsqlserver:sql2019-sles.+:*|microsoftsqlserver:sql2019-rhel7:.+|microsoftsqlserver:sql2017-rhel7:.+|microsoft-ads:.+:*|suse:sles-sap-15-.+-byos:gen*') and
            (imageRef in ('canonical:ubuntuserver:16.04-lts','canonical:ubuntuserver:16.04.0-lts','canonical:ubuntuserver:18.04-lts','canonical:ubuntuserver:18_04-lts-gen2','canonical:0001-com-ubuntu-pro-bionic:pro-18_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts','canonical:0001-com-ubuntu-pro-focal:pro-20_04-lts-gen2','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts-gen2','canonical:0001-com-ubuntu-server-focal:20_04-lts','canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2','canonical:0001-com-ubuntu-server-jammy:22_04-lts','canonical:0001-com-ubuntu-server-jammy:22_04-lts-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-1','microsoftcblmariner:cbl-mariner:1-gen2','microsoftcblmariner:cbl-mariner:cbl-mariner-2','microsoftcblmariner:cbl-mariner:cbl-mariner-2-gen2','microsoft-aks:aks:aks-engine-ubuntu-1804-202112','microsoft-dsvm:aml-workstation:ubuntu-20','microsoft-dsvm:aml-workstation:ubuntu-20-gen2','openlogic:centos:7.2','openlogic:centos:7.3','openlogic:centos:7.4','openlogic:centos:7.5','openlogic:centos:7.6','openlogic:centos:7.7','openlogic:centos:7_8','openlogic:centos:7_9','openlogic:centos:7_9-gen2','openlogic:centos:8.0','openlogic:centos:8_1','openlogic:centos:8_2','openlogic:centos:8_3','openlogic:centos:8_4','openlogic:centos:8_5','openlogic:centos-lvm:7-lvm','openlogic:centos-lvm:8-lvm','redhat:rhel:7.2','redhat:rhel:7.3','redhat:rhel:7.4','redhat:rhel:7.5','redhat:rhel:7.6','redhat:rhel:7.7','redhat:rhel:7.8','redhat:rhel:7_9','redhat:rhel:7-lvm','redhat:rhel:7-raw','redhat:rhel:8','redhat:rhel:8.1','redhat:rhel:81gen2','redhat:rhel:8.2','redhat:rhel:82gen2','redhat:rhel:8_3','redhat:rhel:83-gen2','redhat:rhel:8_4','redhat:rhel:84-gen2','redhat:rhel:8_5','redhat:rhel:85-gen2','redhat:rhel:8_6','redhat:rhel:86-gen2','redhat:rhel:8_7','redhat:rhel:8_8','redhat:rhel:8-lvm','redhat:rhel:8-lvm-gen2','redhat:rhel-raw:8-raw','redhat:rhel-raw:8-raw-gen2','redhat:rhel:9_0','redhat:rhel:9_1','redhat:rhel:9-lvm','redhat:rhel:9-lvm-gen2','suse:sles-12-sp5:gen1','suse:sles-12-sp5:gen2','suse:sles-15-sp2:gen1','suse:sles-15-sp2:gen2','canonical:0001-com-ubuntu-pro-jammy:pro-22_04-lts','openlogic:centos-hpc:7.1','openlogic:centos-hpc:7.3','oracle:oracle-linux:8','oracle:oracle-linux:8-ci','oracle:oracle-linux:81','oracle:oracle-linux:81-ci','oracle:oracle-linux:81-gen2','oracle:oracle-linux:ol82','oracle:oracle-linux:ol8_2-gen2','oracle:oracle-linux:ol82-gen2','oracle:oracle-linux:ol83-lvm','oracle:oracle-linux:ol83-lvm-gen2','oracle:oracle-linux:ol84-lvm','oracle:oracle-linux:ol84-lvm-gen2','openlogic:centos-ci:7-ci','openlogic:centos-lvm:7-lvm-gen2','oracle:oracle-database:oracle_db_21','oracle:oracle-database-19-3:oracle-database-19-0904','redhat:rhel-sap-apps:90sapapps-gen2','redhat:rhel-sap-ha:90sapha-gen2','suse:sle-hpc-15-sp4:gen1','suse:sle-hpc-15-sp4:gen2','suse:sles:12-sp4-gen2','suse:sles-15-sp1-sapcal:gen1','suse:sles-15-sp1-sapcal:gen2','suse:sles-15-sp2-basic:gen2','suse:sles-15-sp2-hpc:gen2','suse:sles-15-sp3-sapcal:gen1','suse:sles-15-sp3-sapcal:gen2','suse:sles-15-sp4:gen1','suse:sles-15-sp4:gen2','suse:sles-15-sp4-basic:gen1','suse:sles-15-sp4-basic:gen2','suse:sles-15-sp4-sapcal:gen1','suse:sles-byos:12-sp4','suse:sles-byos:12-sp4-gen2','suse:sles-sap:12-sp4','suse:sles-sap:12-sp4-gen2','suse:sles-sap-byos:12-sp4','suse:sles-sap-byos:12-sp4-gen2','suse:sles-sap-byos:gen2-12-sp4','suse:sles-sapcal:12-sp3','suse:sles-standard:12-sp4-gen2') or imageRef matches regex 'canonical:.+:*|microsoftsqlserver:.+:*|openlogic:centos:7.+|oracle:oracle-database-.+:18.*|oracle:oracle-linux:7.+|oracle:oracle-linux:ol7.+|oracle:oracle-linux:ol8.+|oracle:oracle-linux:ol9.+|redhat:rhel:7.+|redhat:rhel:8.+|redhat:rhel:9.+|redhat:rhel-ha:8.+|redhat:rhel-raw:7.+|redhat:rhel-raw:8.+|redhat:rhel-raw:9.+|redhat:rhel-sap:7.+|redhat:rhel-sap-apps:7.+|redhat:rhel-sap-apps:8.+|redhat:rhel-sap-.+:9_0|redhat:rhel-sap-ha:7.+|redhat:rhel-sap-ha:8.+|suse:opensuse-leap-15-.+:gen*|suse:sles-12-sp5-.+:gen*|oracle:oracle-linux:ol9-lvm.+|suse:sles-sap-12-sp5.+:gen*|suse:sles-sap-15-.+:gen*')))
| project id, name, os, type, conf, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed)
| union
(resources //union with arc servers, you can play with params as you see fit.
| where type =~ "microsoft.hybridcompute/machines"
| extend id=tolower(id)
| extend os=tolower(coalesce(tostring(properties.osName), tostring(properties.osType)))
| where os in~ ('Linux', 'Windows')
| extend status=properties.status
| extend isMarketplaceUnsupportedImageUsed = false
| project id, name, os, type, status, resourceProperties=properties, isMarketplaceUnsupportedImageUsed))
| join kind=leftouter(
    resources
    | where type =~ "Microsoft.SqlVirtualMachine/sqlVirtualMachines"
    | project resourceId = tolower(properties.virtualMachineResourceId), sqlType = type
) on $left.id == $right.resourceId
| extend type = iff(isnotempty(sqlType), sqlType, type)
| project-away sqlType, resourceId
| where type in~ ("microsoft.compute/virtualmachines", "microsoft.hybridcompute/machines", "microsoft.sqlvirtualmachine/sqlvirtualmachines") // Filtering by resource type
| join kind=leftouter //finally, making a left outer join to fetch updates details from patchassessment
((patchassessmentresources
| where type in~ ("microsoft.compute/virtualmachines/patchassessmentresults", "microsoft.hybridcompute/machines/patchassessmentresults")
| where properties.status =~ "Succeeded" or properties.status =~ "Inprogress" or (isnotnull(properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (properties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ "Unsupported"))
| parse id with resourceId "/patchAssessmentResults" *
| extend resourceId=tolower(resourceId)
| project resourceId, assessProperties=properties))
on $left.id == $right.resourceId //join on resources id & patchassessment id that is parsed.
| extend isUnsupported = isMarketplaceUnsupportedImageUsed or (isnotnull(assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState) and (assessProperties.configurationStatus.vmGuestPatchReadiness.detectedVMGuestPatchSupportState =~ "Unsupported"))
| extend UMStatus = case(
((isnull(assessProperties) == true and not(isUnsupported)) or assessProperties.status =~ "inprogress") and status != "VM running" , "VM not running",
((isnull(assessProperties) == true and not(isUnsupported)) or assessProperties.status =~ "inprogress") and status == "VM running" , "Not Asessed",
//Compliant resources
(isnotnull(assessProperties) and assessProperties.osType =~ "Windows" and (assessProperties.availablePatchCountByClassification.critical==0 and assessProperties.availablePatchCountByClassification.security==0) and not(isUnsupported or assessProperties.status =~ "inprogress")) or (isnotnull(assessProperties) and assessProperties.osType =~ "Linux" and (assessProperties.availablePatchCountByClassification.security==0) and not(isUnsupported or assessProperties.status =~ "inprogress")) , "Patched",
//Non Compliant resources
(isnotnull(assessProperties) and assessProperties.osType =~ "Windows" and (assessProperties.availablePatchCountByClassification.critical> 0 or assessProperties.availablePatchCountByClassification.security>0) and not(isUnsupported or assessProperties.status =~ "inprogress")) or (isnotnull(assessProperties) and assessProperties.osType =~ "Linux" and (assessProperties.availablePatchCountByClassification.security>0) and not(isUnsupported or assessProperties.status =~ "inprogress")) , "Not patched", "Unsupported")
